{"version":3,"sources":["api/twitter.ts","pages/TopPage.tsx","Store.tsx","components/MyTextField.tsx","components/Form.tsx","components/TweetDialog.tsx","components/CardBody.tsx","components/Card.tsx","pages/EditPage.tsx","Router.tsx","components/Header.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["axios","defaults","baseURL","headers","post","getAccessToken","oauthToken","oauthVerifier","body","oauth_token","oauth_verifier","getIcon","accessToken","access_token","useStyles","makeStyles","paper","padding","buttonContainer","loading","position","button","textTransform","EditPage","React","useState","setLoading","isSnackOpen","setIsSnackOpen","classes","onClick","a","get","response","window","location","href","data","authenticate_endpoint","name","content","Grid","container","justify","item","xs","md","lg","Paper","className","spacing","Typography","variant","alignItems","Button","color","size","disabled","startIcon","Twitter","CircularProgress","src","process","width","height","alt","Link","target","Snackbar","open","onClose","message","autoHideDuration","Store","createStore","state","year","month","date","grade","gradeYear","myBoom","iconUrl","MyTextField","rows","appendText","useGlobalState","info","setInfo","TextField","fullWidth","multiline","InputProps","endAdornment","InputAdornment","value","onChange","event","ItemGrid","children","title","direction","sm","root","Form","setGrade","Select","margin","MenuItem","TweetDialog","setOpen","Dialog","disableBackdropClick","DialogContent","DialogActions","display","paddingTop","left","paddingLeft","right","icon","backgroundColor","flexDirection","justifyContent","fontSize","lineHeight","empire","marginTop","marginLeft","letterSpacing","row","key","ymd","boomRow","whiteSpace","targetKey","targetValue","fontFamily","Card","backgroundImage","backgroundSize","borderRadius","CardBody","card","top","setSrc","setAccessToken","setIconUrl","useRef","useLocation","useEffect","parsed","queryString","parse","search","tokenResponse","iconResponse","url","console","error","init","ref","current","html2canvas","scrollX","scrollY","then","canvas","toDataURL","Router","basename","path","exact","component","TopPage","to","Header","AppBar","Toolbar","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9cc6a452.chunk.js","sourcesContent":["import axios from 'axios'\n\naxios.defaults.baseURL = 'https://dhvwqsfku5.execute-api.ap-northeast-1.amazonaws.com/dev'\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8'\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*'\n\nexport const getRequestToken = () => {\n  return axios.get<GetRequestTokenResponse>('/request_token')\n}\n\nexport const getAccessToken = (oauthToken: string, oauthVerifier: string) => {\n  const body = {\n    oauth_token: oauthToken,\n    oauth_verifier: oauthVerifier,\n  }\n  return axios.post<GetAccessTokenResponse>('/access_token', body)\n}\n\nexport const getIcon = (accessToken: object) => {\n  const body = {\n    access_token: accessToken,\n  }\n  return axios.post<GetIconResponse>('/icon', body)\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, CircularProgress, Grid, Link, Paper, Snackbar, Typography } from '@material-ui/core'\nimport { Twitter } from '@material-ui/icons'\n\nimport { getRequestToken } from 'api/twitter'\n\nconst useStyles = makeStyles({\n  paper: {\n    padding: '16px 8px',\n  },\n  buttonContainer: {\n    padding: 32,\n  },\n  loading: {\n    position: 'absolute',\n  },\n  button: {\n    textTransform: 'none',\n  },\n})\n\nconst EditPage: React.FC = () => {\n  const [loading, setLoading] = React.useState(false)\n  const [isSnackOpen, setIsSnackOpen] = React.useState(false)\n  const classes = useStyles()\n\n  const onClick = async () => {\n    setLoading(true)\n    try {\n      const response = await getRequestToken()\n      window.location.href = response.data.authenticate_endpoint\n    } catch {\n      setIsSnackOpen(true)\n    }\n    setLoading(false)\n  }\n\n  return (\n    <div>\n      <meta name='viewport' content='minimum-scale=1, initial-scale=1, width=device-width' />\n      <Grid container justify='center'>\n        <Grid item xs={12} md={8} lg={6}>\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item container justify='center'>\n                <Typography variant='subtitle1'>自分の生徒証を作成できるサイトです！</Typography>\n              </Grid>\n              <Grid container item justify='center' alignItems='center' className={classes.buttonContainer}>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  onClick={onClick}\n                  size='large'\n                  disabled={loading}\n                  className={classes.button}\n                  startIcon={<Twitter />}\n                >\n                  Twitter認証して生徒証を作る\n                </Button>\n                {loading && <CircularProgress className={classes.loading} />}\n              </Grid>\n              <Grid item container justify='center'>\n                <Typography variant='body2'>Twitter認証はアイコン取得と共有ツイートのためだけに使用します</Typography>\n              </Grid>\n              <Grid item container justify='center'>\n                <Typography variant='subtitle1'>↓ サンプル ↓</Typography>\n                <Grid item container justify='center'>\n                  <img src={`${process.env.PUBLIC_URL}/sample.jpg`} width='70%' height='auto' alt='sample' />\n                </Grid>\n              </Grid>\n              <Grid item container justify='flex-end'>\n                <Typography variant='caption'>\n                  Created by{' '}\n                  <Link href='https://twitter.com/ryochan_metal' target='_blank'>\n                    @ryochan_metal\n                  </Link>\n                </Typography>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n      <Snackbar\n        open={isSnackOpen}\n        onClose={() => setIsSnackOpen(false)}\n        message='エラーが発生しました。しばらく時間をおいて再度アクセスして下さい'\n        autoHideDuration={5000}\n      />\n    </div>\n  )\n}\n\nexport default EditPage\n","import { createStore } from 'react-hooks-global-state'\n\nconst reducer = (state: State): State => state\n\nconst initialState: State = {\n  name: '',\n  year: '',\n  month: '',\n  date: '',\n  grade: '中等部',\n  gradeYear: '',\n  myBoom: '',\n  target: '',\n  accessToken: {},\n  iconUrl: '',\n}\n\nexport const Store = createStore(reducer, initialState)\n","import React from 'react'\nimport { InputAdornment, TextField } from '@material-ui/core'\n\nimport { Store } from 'Store'\n\ntype Props = {\n  item: keyof StudentInfo\n  rows: number\n  appendText?: string\n}\n\nconst MyTextField: React.FC<Props> = ({ item, rows, appendText }) => {\n  const [info, setInfo] = Store.useGlobalState(item)\n\n  return (\n    <TextField\n      variant='outlined'\n      size='small'\n      fullWidth\n      multiline={rows > 1}\n      rows={rows}\n      InputProps={{ endAdornment: <InputAdornment position='end'>{appendText || ''}</InputAdornment> }}\n      value={info}\n      onChange={(event) => setInfo(event.target.value as string)}\n    />\n  )\n}\n\nexport default MyTextField\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Grid, MenuItem, Select, Typography } from '@material-ui/core'\n\nimport { Store } from 'Store'\nimport MyTextField from 'components/MyTextField'\n\ntype ItemGridProps = {\n  title: string\n}\n\nconst ItemGrid: React.FC<ItemGridProps> = ({ children, title }) => {\n  return (\n    <Grid item xs={12}>\n      <Grid container direction='row' alignItems='center'>\n        <Grid item xs={12} sm={2}>\n          <Typography variant='subtitle2'>{title}</Typography>\n        </Grid>\n        {children}\n      </Grid>\n    </Grid>\n  )\n}\n\nconst useStyles = makeStyles({\n  root: {\n    padding: '8px',\n  },\n})\n\nconst Form: React.FC = () => {\n  const [grade, setGrade] = Store.useGlobalState('grade')\n  const classes = useStyles()\n\n  return (\n    <Grid container className={classes.root} spacing={2}>\n      <ItemGrid title='名前'>\n        <Grid item xs={12} sm={6}>\n          <MyTextField item='name' rows={1} />\n        </Grid>\n      </ItemGrid>\n      <ItemGrid title='生年月日'>\n        <Grid item xs={4} sm={3}>\n          <MyTextField item='year' rows={1} appendText='年' />\n        </Grid>\n        <Grid item xs={4} sm={2}>\n          <MyTextField item='month' rows={1} appendText='月' />\n        </Grid>\n        <Grid item xs={4} sm={2}>\n          <MyTextField item='date' rows={1} appendText='日' />\n        </Grid>\n      </ItemGrid>\n      <ItemGrid title='学年'>\n        <Select variant='outlined' margin='dense' value={grade} onChange={(event) => setGrade(event.target.value as '中等部' | '小等部')}>\n          <MenuItem value='中等部'>中等部</MenuItem>\n          <MenuItem value='小等部'>小等部</MenuItem>\n        </Select>\n        <Grid item xs={4} sm={2}>\n          <MyTextField item='gradeYear' rows={1} appendText='年' />\n        </Grid>\n      </ItemGrid>\n      <ItemGrid title='マイブーム'>\n        <Grid item xs={12} sm={10}>\n          <MyTextField item='myBoom' rows={2} />\n        </Grid>\n      </ItemGrid>\n      <ItemGrid title='今年の目標'>\n        <Grid item xs={12} sm={10}>\n          <MyTextField item='target' rows={2} />\n        </Grid>\n      </ItemGrid>\n    </Grid>\n  )\n}\n\nexport default Form\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, Dialog, DialogContent, DialogActions, Grid } from '@material-ui/core'\nimport { Twitter } from '@material-ui/icons'\n\ntype Props = {\n  src: string\n  open: boolean\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nconst useStyles = makeStyles({\n  button: {\n    textTransform: 'none',\n  },\n})\n\nconst TweetDialog: React.FC<Props> = ({ src, open, setOpen }) => {\n  const classes = useStyles()\n  const cancel = () => {\n    setOpen(false)\n  }\n  const tweet = () => {\n    setOpen(false)\n  }\n  return (\n    <Dialog open={open} disableBackdropClick>\n      <DialogContent>\n        <img src={src} width='100%' alt='生徒証画像' />\n      </DialogContent>\n      <DialogActions>\n        <Grid container justify='center' alignItems='center' spacing={2} direction='row-reverse'>\n          <Grid item>\n            <Button onClick={tweet} variant='contained' color='primary' size='large' className={classes.button} startIcon={<Twitter />}>\n              Twitterで共有\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button onClick={cancel}>キャンセル</Button>\n          </Grid>\n        </Grid>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default TweetDialog\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { Store } from 'Store'\n\nconst useStyles = makeStyles({\n  body: {\n    width: '100%',\n    height: 690,\n    display: 'flex',\n    paddingTop: 202,\n  },\n  left: {\n    width: 470,\n    height: 590,\n    paddingLeft: 60,\n    paddingTop: 100,\n  },\n  right: {\n    width: 870,\n    height: 630,\n    paddingTop: 60,\n  },\n  icon: {\n    width: 380,\n    height: 380,\n    backgroundColor: 'white',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 40,\n    lineHeight: 2,\n  },\n  empire: {\n    marginTop: 64,\n    marginLeft: 16,\n    fontSize: 24,\n    lineHeight: 1.3,\n    letterSpacing: 2,\n  },\n  row: {\n    padding: '7px 0',\n    display: 'flex',\n    alignItems: 'center',\n    letterSpacing: 2,\n    lineHeight: 1.2,\n  },\n  key: {\n    width: 210,\n    fontSize: 32,\n  },\n  value: {\n    width: 600,\n    fontSize: 48,\n    color: '#333333',\n  },\n  ymd: {\n    fontSize: 40,\n    color: '#333333',\n  },\n  boomRow: {\n    width: '100%',\n    height: 120,\n    whiteSpace: 'pre-wrap',\n  },\n  targetKey: {\n    marginTop: 16,\n    fontSize: 32,\n    letterSpacing: 2,\n    lineHeight: 1.2,\n  },\n  targetValue: {\n    margin: '20px 0 0 60px',\n    width: 760,\n    height: 190,\n    fontSize: 56,\n    color: '#333333',\n    fontFamily: 'TanukiMagic !important',\n    letterSpacing: 2,\n    lineHeight: 1.2,\n    whiteSpace: 'pre-wrap',\n  },\n})\n\nconst Card: React.FC = () => {\n  const [name] = Store.useGlobalState('name')\n  const [year] = Store.useGlobalState('year')\n  const [month] = Store.useGlobalState('month')\n  const [date] = Store.useGlobalState('date')\n  const [grade] = Store.useGlobalState('grade')\n  const [gradeYear] = Store.useGlobalState('gradeYear')\n  const [myBoom] = Store.useGlobalState('myBoom')\n  const [target] = Store.useGlobalState('target')\n  const [iconUrl] = Store.useGlobalState('iconUrl')\n  const classes = useStyles()\n  return (\n    <div className={classes.body}>\n      <div className={classes.left}>\n        <div className={classes.icon}>\n          <img src={iconUrl} width='100%' height='auto' alt='アイコン' />\n        </div>\n        <div className={classes.empire}>\n          <div>有効期限</div>\n          <div>2021.8.31</div>\n        </div>\n      </div>\n      <div className={classes.right}>\n        <div className={classes.row}>\n          <div className={classes.key}>氏　　名</div>\n          <div className={classes.value}>{name}</div>\n        </div>\n        <div className={classes.row}>\n          <div className={classes.key}>生年月日</div>\n          <div className={classes.value}>\n            {year} <span className={classes.ymd}>年</span> {month} <span className={classes.ymd}>月</span> {date} <span className={classes.ymd}>日</span>\n          </div>\n        </div>\n        <div className={classes.row}>\n          <div className={classes.key}>学　　年</div>\n          <div className={classes.value}>\n            {grade} {gradeYear} 年\n          </div>\n        </div>\n        <div className={classes.boomRow}>\n          <div className={classes.row}>\n            <div className={classes.key}>マイブーム</div>\n            <div className={classes.value}>{myBoom}</div>\n          </div>\n        </div>\n        <div className={classes.targetKey}>今年の目標</div>\n        <div className={classes.targetValue}>{target}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport CardBody from 'components/CardBody'\n\nconst pink = '#E62588'\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    height: '100%',\n    backgroundImage: 'url(\"background.png\")',\n    backgroundSize: 'cover',\n    borderRadius: 8,\n    color: pink,\n  },\n})\n\nconst Card: React.FC = () => {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <CardBody />\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, CircularProgress, Grid, Link, Paper, Typography } from '@material-ui/core'\nimport html2canvas from 'html2canvas'\nimport { useLocation } from 'react-router-dom'\nimport queryString from 'query-string'\n\nimport { Store } from 'Store'\nimport Form from 'components/Form'\nimport TweetDialog from 'components/TweetDialog'\nimport Card from 'components/Card'\nimport { getAccessToken, getIcon } from 'api/twitter'\n\ntype Query = {\n  oauth_token: string\n  oauth_verifier: string\n}\n\nconst useStyles = makeStyles({\n  paper: {\n    padding: '16px 8px',\n  },\n  buttonContainer: {\n    padding: 32,\n  },\n  loading: {\n    position: 'absolute',\n  },\n  card: {\n    position: 'absolute',\n    top: -2000,\n    width: 1342,\n    height: 900,\n  },\n  button: {\n    textTransform: 'none',\n  },\n})\n\nconst EditPage: React.FC = () => {\n  const [open, setOpen] = React.useState(false)\n  const [loading, setLoading] = React.useState(false)\n  const [src, setSrc] = React.useState('')\n  const [accessToken, setAccessToken] = Store.useGlobalState('accessToken')\n  const [iconUrl, setIconUrl] = Store.useGlobalState('iconUrl')\n  const classes = useStyles()\n  const card = React.useRef<HTMLDivElement>(null)\n  const location = useLocation()\n\n  React.useEffect(() => {\n    const init = async () => {\n      try {\n        const parsed = queryString.parse(location.search) as Query\n        const oauthToken = parsed.oauth_token\n        const oauthVerifier = parsed.oauth_verifier\n        const tokenResponse = await getAccessToken(oauthToken, oauthVerifier)\n        setAccessToken(tokenResponse.data.access_token)\n        const iconResponse = await getIcon(tokenResponse.data.access_token)\n        const url = iconResponse.data.icon\n        setIconUrl(url)\n      } catch (e) {\n        console.error(e)\n        // エラーのパラメータを持ってTopPageへ\n      }\n    }\n    init()\n  }, [location, setAccessToken, setIconUrl])\n\n  const onClick = () => {\n    if (card.current) {\n      setLoading(true)\n      html2canvas(card.current, { scrollX: -window.scrollX, scrollY: -window.scrollY }).then((canvas) => {\n        setSrc(canvas.toDataURL())\n        setLoading(false)\n        setOpen(true)\n      })\n    } else {\n      console.error('error')\n    }\n  }\n  return (\n    <div>\n      <meta name='viewport' content='minimum-scale=1, initial-scale=1, width=device-width' />\n      <div ref={card} className={classes.card}>\n        <Card />\n      </div>\n      <Grid container justify='center'>\n        <Grid item xs={12} md={8} lg={6}>\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item container>\n                <Typography variant='subtitle1'>以下を入力して、自分の生徒証を作ろう！</Typography>\n              </Grid>\n              <Grid item container>\n                <Form />\n              </Grid>\n              <Grid container item justify='center' alignItems='center' className={classes.buttonContainer}>\n                <Button variant='contained' color='primary' onClick={onClick} size='large' disabled={loading} className={classes.button}>\n                  Twitter連携して生徒証を作成する\n                </Button>\n                {loading && <CircularProgress className={classes.loading} />}\n              </Grid>\n              <Grid item container justify='center'>\n                <Typography variant='caption'>Twitter連携はアイコン取得と共有ツイートのために使用します</Typography>\n              </Grid>\n              <Grid item container justify='flex-end'>\n                <Typography variant='caption'>\n                  Created by{' '}\n                  <Link href='https://twitter.com/ryochan_metal' target='_blank'>\n                    @ryochan_metal\n                  </Link>\n                </Typography>\n              </Grid>\n            </Grid>\n            <TweetDialog src={src} open={open} setOpen={setOpen} />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default EditPage\n","import React from 'react'\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\n\nimport TopPage from 'pages/TopPage'\nimport EditPage from 'pages/EditPage'\n\nconst Router = () => {\n  return (\n    <BrowserRouter basename='/sakura-card-maker'>\n      <Switch>\n        <Route path='/' exact component={TopPage} />\n        <Route path='/edit' component={EditPage} />\n        {/* Not Found */}\n        <Route component={() => <Redirect to='/' />} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default Router\n","import React from 'react'\nimport { AppBar, Toolbar, Typography } from '@material-ui/core'\n\nconst Header: React.FC = () => {\n  return (\n    <AppBar position='static'>\n      <Toolbar>\n        <Typography variant='h6'>さくら学院 生徒証メーカー（開発中）</Typography>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nimport Router from 'Router'\nimport Header from 'components/Header'\n\nconst App: React.FC = () => {\n  return (\n    <div>\n      <Header />\n      <Router />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}