{"version":3,"sources":["components/Header.tsx","Store.tsx","components/MyTextField.tsx","components/Form.tsx","components/TweetDialog.tsx","components/CardHeader.tsx","components/CardBodyBackground.tsx","components/CardBody.tsx","components/Card.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","AppBar","position","Toolbar","Typography","variant","Store","createStore","state","name","year","month","date","grade","gradeYear","myBoom","target","MyTextField","item","rows","appendText","useGlobalState","info","setInfo","TextField","size","fullWidth","multiline","InputProps","endAdornment","InputAdornment","value","onChange","event","ItemGrid","children","title","Grid","xs","container","direction","alignItems","sm","useStyles","makeStyles","root","padding","Form","setGrade","classes","className","spacing","Select","margin","MenuItem","button","textTransform","TweetDialog","src","open","setOpen","Dialog","disableBackdropClick","DialogContent","width","alt","DialogActions","justify","Button","onClick","color","startIcon","Twitter","header","height","display","logo","marginLeft","logoJp","fontSize","paddingTop","letterSpacing","logoEn","marginTop","titleJp","marginRight","titleEn","lineHeight","paddingRight","textAlign","marginBottom","border","backgroundColor","CardHeader","background","backStr","opacity","overflow","backPair","backStr1","whiteSpace","backStr2","backLogo","justifyContent","Card","process","Array","map","_","i","key","body","left","paddingLeft","right","icon","flexDirection","empire","row","ymd","boomRow","targetKey","targetValue","fontFamily","CardBodyBackground","borderRadius","CardBody","paper","buttonContainer","loading","card","top","App","React","useState","setLoading","setSrc","useRef","content","ref","md","lg","Paper","current","html2canvas","scrollX","window","scrollY","then","canvas","toDataURL","console","error","disabled","CircularProgress","Link","href","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ca9006c7.chunk.js","sourcesContent":["import React from 'react'\nimport { AppBar, Toolbar, Typography } from '@material-ui/core'\n\nconst Header: React.FC = () => {\n  return (\n    <AppBar position='static'>\n      <Toolbar>\n        <Typography variant='h6'>さくら学院 生徒証メーカー（開発中）</Typography>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Header\n","import { createStore } from 'react-hooks-global-state'\n\nconst reducer = (state: StudentInfo): StudentInfo => state\n\nconst initialState: StudentInfo = {\n  name: '',\n  year: '',\n  month: '',\n  date: '',\n  grade: '中等部',\n  gradeYear: '',\n  myBoom: '',\n  target: '',\n}\n\nexport const Store = createStore(reducer, initialState)\n","import React from 'react'\nimport { InputAdornment, TextField } from '@material-ui/core'\n\nimport { Store } from 'Store'\n\ntype Props = {\n  item: keyof StudentInfo\n  rows: number\n  appendText?: string\n}\n\nconst MyTextField: React.FC<Props> = ({ item, rows, appendText }) => {\n  const [info, setInfo] = Store.useGlobalState(item)\n\n  return (\n    <TextField\n      variant='outlined'\n      size='small'\n      fullWidth\n      multiline={rows > 1}\n      rows={rows}\n      InputProps={{ endAdornment: <InputAdornment position='end'>{appendText || ''}</InputAdornment> }}\n      value={info}\n      onChange={(event) => setInfo(event.target.value as string)}\n    />\n  )\n}\n\nexport default MyTextField\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Grid, MenuItem, Select, Typography } from '@material-ui/core'\n\nimport { Store } from 'Store'\nimport MyTextField from 'components/MyTextField'\n\ntype ItemGridProps = {\n  title: string\n}\n\nconst ItemGrid: React.FC<ItemGridProps> = ({ children, title }) => {\n  return (\n    <Grid item xs={12}>\n      <Grid container direction='row' alignItems='center'>\n        <Grid item xs={12} sm={2}>\n          <Typography variant='subtitle2'>{title}</Typography>\n        </Grid>\n        {children}\n      </Grid>\n    </Grid>\n  )\n}\n\nconst useStyles = makeStyles({\n  root: {\n    padding: '8px',\n  },\n})\n\nconst Form: React.FC = () => {\n  const [grade, setGrade] = Store.useGlobalState('grade')\n  const classes = useStyles()\n\n  return (\n    <Grid container className={classes.root} spacing={2}>\n      <ItemGrid title='名前'>\n        <Grid item xs={12} sm={6}>\n          <MyTextField item='name' rows={1} />\n        </Grid>\n      </ItemGrid>\n      <ItemGrid title='生年月日'>\n        <Grid item xs={4} sm={3}>\n          <MyTextField item='year' rows={1} appendText='年' />\n        </Grid>\n        <Grid item xs={4} sm={2}>\n          <MyTextField item='month' rows={1} appendText='月' />\n        </Grid>\n        <Grid item xs={4} sm={2}>\n          <MyTextField item='date' rows={1} appendText='日' />\n        </Grid>\n      </ItemGrid>\n      <ItemGrid title='学年'>\n        <Select variant='outlined' margin='dense' value={grade} onChange={(event) => setGrade(event.target.value as '中等部' | '小等部')}>\n          <MenuItem value='中等部'>中等部</MenuItem>\n          <MenuItem value='小等部'>小等部</MenuItem>\n        </Select>\n        <Grid item xs={4} sm={2}>\n          <MyTextField item='gradeYear' rows={1} appendText='年' />\n        </Grid>\n      </ItemGrid>\n      <ItemGrid title='マイブーム'>\n        <Grid item xs={12} sm={10}>\n          <MyTextField item='myBoom' rows={2} />\n        </Grid>\n      </ItemGrid>\n      <ItemGrid title='今年の目標'>\n        <Grid item xs={12} sm={10}>\n          <MyTextField item='target' rows={2} />\n        </Grid>\n      </ItemGrid>\n    </Grid>\n  )\n}\n\nexport default Form\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, Dialog, DialogContent, DialogActions, Grid } from '@material-ui/core'\nimport { Twitter } from '@material-ui/icons'\n\ntype Props = {\n  src: string\n  open: boolean\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nconst useStyles = makeStyles({\n  button: {\n    textTransform: 'none',\n  },\n})\n\nconst TweetDialog: React.FC<Props> = ({ src, open, setOpen }) => {\n  const classes = useStyles()\n  const cancel = () => {\n    setOpen(false)\n  }\n  const tweet = () => {\n    setOpen(false)\n  }\n  return (\n    <Dialog open={open} disableBackdropClick>\n      <DialogContent>\n        <img src={src} width='100%' alt='生徒証画像' />\n      </DialogContent>\n      <DialogActions>\n        <Grid container justify='center' alignItems='center' spacing={2} direction='row-reverse'>\n          <Grid item>\n            <Button onClick={tweet} variant='contained' color='primary' size='large' className={classes.button} startIcon={<Twitter />}>\n              Twitterで共有\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button onClick={cancel}>キャンセル</Button>\n          </Grid>\n        </Grid>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default TweetDialog\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst pink = '#E62588'\n\nconst useStyles = makeStyles({\n  header: {\n    width: '100%',\n    height: 164,\n    display: 'flex',\n  },\n  logo: {\n    marginLeft: 70,\n  },\n  logoJp: {\n    fontSize: 60,\n    paddingTop: 56,\n    letterSpacing: -2,\n  },\n  logoEn: {\n    fontSize: 32,\n    marginTop: 8,\n    marginLeft: 16,\n    letterSpacing: 4,\n  },\n  titleJp: {\n    fontSize: 72,\n    marginLeft: 'auto',\n    paddingTop: 64,\n    marginRight: 60,\n    letterSpacing: 110,\n  },\n  titleEn: {\n    width: '100%',\n    height: 44,\n    fontSize: 44,\n    lineHeight: 1,\n    paddingRight: 44,\n    letterSpacing: 40,\n    textAlign: 'end',\n    marginBottom: -8,\n  },\n  border: {\n    width: '100%',\n    height: 8,\n    color: pink,\n    backgroundColor: pink,\n    margin: 0,\n  },\n})\n\nconst CardHeader: React.FC = () => {\n  const classes = useStyles()\n  return (\n    <div>\n      <div className={classes.header}>\n        <div className={classes.logo}>\n          <div className={classes.logoJp}>さくら学院 父兄</div>\n          <div className={classes.logoEn}>Sakura Gakuin Fukei</div>\n        </div>\n        <div className={classes.titleJp}>生徒証</div>\n      </div>\n      <div className={classes.titleEn}>Student Card</div>\n      <hr className={classes.border} />\n    </div>\n  )\n}\n\nexport default CardHeader\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n  background: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n  },\n  backStr: {\n    position: 'absolute',\n    backgroundColor: '#FEF3F8',\n    opacity: 0.1,\n    overflow: 'hidden',\n  },\n  backPair: {\n    marginBottom: 8,\n  },\n  backStr1: {\n    fontSize: 39,\n    whiteSpace: 'nowrap',\n    marginLeft: -32,\n    marginBottom: 4,\n  },\n  backStr2: {\n    fontSize: 39,\n    whiteSpace: 'nowrap',\n    marginLeft: -108,\n  },\n  backLogo: {\n    position: 'absolute',\n    width: 1400,\n    height: 660,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    opacity: 0.1,\n  },\n})\n\nconst Card: React.FC = () => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.background}>\n      <div className={classes.backLogo}>\n        <div>\n          <img src={`${process.env.PUBLIC_URL}/logo.png`} width='580' height='580' alt='logo' />\n        </div>\n      </div>\n      <div className={classes.backStr}>\n        {[...Array(8)].map((_, i) => (\n          <div className={classes.backPair} key={i}>\n            <div className={classes.backStr1}>{[...Array(6)].map(() => 'Sakura Gakuin ')}</div>\n            <div className={classes.backStr2}>{[...Array(6)].map(() => 'Sakura Gakuin ')}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { Store } from 'Store'\nimport CardBodyBackground from 'components/CardBodyBackground'\n\nconst useStyles = makeStyles({\n  body: {\n    width: '100%',\n    height: 690,\n    display: 'flex',\n  },\n  left: {\n    width: 470,\n    height: 590,\n    paddingLeft: 60,\n    paddingTop: 100,\n  },\n  right: {\n    width: 870,\n    height: 630,\n    paddingTop: 60,\n  },\n  icon: {\n    width: 380,\n    height: 380,\n    backgroundColor: 'white',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 32,\n    lineHeight: 2,\n  },\n  empire: {\n    marginTop: 64,\n    marginLeft: 16,\n    fontSize: 24,\n    lineHeight: 1.3,\n    letterSpacing: 2,\n  },\n  row: {\n    padding: '7px 0',\n    display: 'flex',\n    alignItems: 'center',\n    letterSpacing: 2,\n    lineHeight: 1.2,\n  },\n  key: {\n    width: 210,\n    fontSize: 32,\n  },\n  value: {\n    width: 600,\n    fontSize: 48,\n    color: 'black',\n  },\n  ymd: {\n    fontSize: 40,\n    color: 'black',\n  },\n  boomRow: {\n    width: '100%',\n    height: 120,\n    whiteSpace: 'pre-wrap',\n  },\n  targetKey: {\n    marginTop: 16,\n    fontSize: 32,\n    letterSpacing: 2,\n    lineHeight: 1.2,\n  },\n  targetValue: {\n    margin: '20px 0 0 60px',\n    width: 760,\n    height: 190,\n    fontSize: 56,\n    color: 'black',\n    fontFamily: 'TanukiMagic !important',\n    letterSpacing: 2,\n    lineHeight: 1.2,\n    whiteSpace: 'pre-wrap',\n  },\n})\n\nconst Card: React.FC = () => {\n  const [name] = Store.useGlobalState('name')\n  const [year] = Store.useGlobalState('year')\n  const [month] = Store.useGlobalState('month')\n  const [date] = Store.useGlobalState('date')\n  const [grade] = Store.useGlobalState('grade')\n  const [gradeYear] = Store.useGlobalState('gradeYear')\n  const [myBoom] = Store.useGlobalState('myBoom')\n  const [target] = Store.useGlobalState('target')\n  const classes = useStyles()\n  return (\n    <div className={classes.body}>\n      <div className={classes.left}>\n        <div className={classes.icon}>\n          <div>Twitterの</div>\n          <div>アイコンが</div>\n          <div>ここに入ります</div>\n        </div>\n        <div className={classes.empire}>\n          <div>有効期限</div>\n          <div>9999.3.31</div>\n        </div>\n      </div>\n      <div className={classes.right}>\n        <div className={classes.row}>\n          <div className={classes.key}>氏　　名</div>\n          <div className={classes.value}>{name}</div>\n        </div>\n        <div className={classes.row}>\n          <div className={classes.key}>生年月日</div>\n          <div className={classes.value}>\n            {year} <span className={classes.ymd}>年</span> {month} <span className={classes.ymd}>月</span> {date} <span className={classes.ymd}>日</span>\n          </div>\n        </div>\n        <div className={classes.row}>\n          <div className={classes.key}>学　　年</div>\n          <div className={classes.value}>\n            {grade} {gradeYear} 年\n          </div>\n        </div>\n        <div className={classes.boomRow}>\n          <div className={classes.row}>\n            <div className={classes.key}>マイブーム</div>\n            <div className={classes.value}>{myBoom}</div>\n          </div>\n        </div>\n        <div className={classes.targetKey}>今年の目標</div>\n        <div className={classes.targetValue}>{target}</div>\n      </div>\n      <CardBodyBackground />\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport CardHeader from 'components/CardHeader'\nimport CardBody from 'components/CardBody'\n\nconst pink = '#E62588'\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#FEF3F8',\n    borderRadius: 8,\n    color: pink,\n  },\n})\n\nconst Card: React.FC = () => {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <CardHeader />\n      <CardBody />\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, CircularProgress, Grid, Link, Paper, Typography } from '@material-ui/core'\nimport html2canvas from 'html2canvas'\n\nimport Header from 'components/Header'\nimport Form from 'components/Form'\nimport TweetDialog from 'components/TweetDialog'\nimport Card from 'components/Card'\n\nconst useStyles = makeStyles({\n  paper: {\n    padding: '16px 8px',\n  },\n  buttonContainer: {\n    padding: 32,\n  },\n  loading: {\n    position: 'absolute',\n  },\n  card: {\n    position: 'absolute',\n    top: -2000,\n    width: 1400,\n    height: 900,\n  },\n})\n\nconst App: React.FC = () => {\n  const [open, setOpen] = React.useState(false)\n  const [loading, setLoading] = React.useState(false)\n  const [src, setSrc] = React.useState('')\n  const classes = useStyles()\n  const card = React.useRef<HTMLDivElement>(null)\n  const onClick = () => {\n    if (card.current) {\n      setLoading(true)\n      html2canvas(card.current, { scrollX: -window.scrollX, scrollY: -window.scrollY }).then((canvas) => {\n        setSrc(canvas.toDataURL())\n        setLoading(false)\n        setOpen(true)\n      })\n    } else {\n      console.error('error')\n    }\n  }\n  return (\n    <div>\n      <meta name='viewport' content='minimum-scale=1, initial-scale=1, width=device-width' />\n      <Header />\n      <div ref={card} className={classes.card}>\n        <Card />\n      </div>\n      <Grid container justify='center'>\n        <Grid item xs={12} md={8} lg={6}>\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item container>\n                <Typography variant='subtitle1'>以下を記入して、自分の生徒証を作ろう！</Typography>\n              </Grid>\n              <Grid item container>\n                <Form />\n              </Grid>\n              <Grid container item justify='center' alignItems='center' className={classes.buttonContainer}>\n                <Button variant='contained' color='primary' onClick={onClick} size='large' disabled={loading}>\n                  生徒証を作成する\n                </Button>\n                {loading && <CircularProgress className={classes.loading} />}\n              </Grid>\n              <Grid item container justify='flex-end'>\n                <Typography variant='caption'>\n                  Created by{' '}\n                  <Link href='https://twitter.com/ryochan_metal' target='_blank'>\n                    @ryochan_metal\n                  </Link>\n                </Typography>\n              </Grid>\n            </Grid>\n            <TweetDialog src={src} open={open} setOpen={setOpen} />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}