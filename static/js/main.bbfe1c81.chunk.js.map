{"version":3,"sources":["Store.tsx","api/twitter.ts","pages/TopPage.tsx","components/MyTextField.tsx","components/Form.tsx","components/TweetDialog.tsx","components/CardHeader.tsx","components/CardBody.tsx","components/Card.tsx","pages/EditPage.tsx","Router.tsx","components/Header.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Store","createStore","state","name","year","month","date","grade","gradeYear","myBoom","target","accessToken","iconUrl","isBackdropOpen","isError","axios","defaults","baseURL","headers","post","getAccessToken","oauthToken","oauthVerifier","body","oauth_token","oauth_verifier","getIcon","access_token","tweet","image","useStyles","makeStyles","paper","padding","buttonContainer","button","textTransform","TopPage","useGlobalState","setIsBackdropOpen","setIsError","classes","onClick","a","get","response","window","location","href","data","authenticate_endpoint","content","Grid","container","justify","item","xs","md","lg","Paper","className","spacing","Typography","variant","alignItems","Button","color","size","disabled","startIcon","Twitter","src","process","width","alt","Link","MyTextField","rows","appendText","info","setInfo","TextField","fullWidth","multiline","InputProps","endAdornment","InputAdornment","position","value","onChange","event","ItemGrid","children","title","direction","sm","root","Form","setGrade","Select","margin","MenuItem","TweetDialog","open","setOpen","React","useState","complete","setComplete","close","onClickTweet","Dialog","disableBackdropClick","DialogContent","w","document","write","DialogActions","header","height","display","logo","marginLeft","logoJp","fontSize","paddingTop","letterSpacing","logoEn","marginTop","titleJp","marginRight","titleEn","lineHeight","paddingRight","textAlign","marginBottom","border","backgroundColor","CardHeader","backgroundImage","backgroundSize","left","paddingLeft","right","icon","flexDirection","justifyContent","empire","row","key","ymd","boomRow","whiteSpace","targetKey","targetValue","fontFamily","Card","borderRadius","CardBody","card","EditPage","confirming","setConfirming","setSrc","setAccessToken","setIconUrl","useRef","useLocation","history","useHistory","useEffect","parsed","queryString","parse","search","tokenResponse","iconResponse","url","push","init","ref","current","html2canvas","scrollX","scrollY","then","canvas","toDataURL","Router","basename","path","exact","component","to","Header","AppBar","Toolbar","createStyles","backdrop","zIndex","App","Backdrop","CircularProgress","Snackbar","onClose","message","autoHideDuration","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.bbfe1c81.chunk.js","sourcesContent":["import { createStore } from 'react-hooks-global-state'\n\nconst reducer = (state: State): State => state\n\nconst initialState: State = {\n  name: '',\n  year: '',\n  month: '',\n  date: '',\n  grade: '中等部',\n  gradeYear: '',\n  myBoom: '',\n  target: '',\n  accessToken: {},\n  iconUrl: '',\n  isBackdropOpen: false,\n  isError: false,\n}\n\nexport const Store = createStore(reducer, initialState)\n","import axios from 'axios'\n\naxios.defaults.baseURL = 'https://dhvwqsfku5.execute-api.ap-northeast-1.amazonaws.com/dev'\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8'\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*'\n\nexport const getRequestToken = () => {\n  return axios.get<GetRequestTokenResponse>('/request_token')\n}\n\nexport const getAccessToken = (oauthToken: string, oauthVerifier: string) => {\n  const body = {\n    oauth_token: oauthToken,\n    oauth_verifier: oauthVerifier,\n  }\n  return axios.post<GetAccessTokenResponse>('/access_token', body)\n}\n\nexport const getIcon = (accessToken: object) => {\n  const body = {\n    access_token: accessToken,\n  }\n  return axios.post<GetIconResponse>('/icon', body)\n}\n\nexport const tweet = (accessToken: object, image: string) => {\n  const body = {\n    access_token: accessToken,\n    image,\n  }\n  return axios.post<GetIconResponse>('/tweet', body)\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, Grid, Link, Paper, Typography } from '@material-ui/core'\nimport { Twitter } from '@material-ui/icons'\n\nimport { Store } from 'Store'\nimport { getRequestToken } from 'api/twitter'\n\nconst useStyles = makeStyles({\n  paper: {\n    padding: '16px 8px',\n  },\n  buttonContainer: {\n    padding: 32,\n  },\n  button: {\n    textTransform: 'none',\n  },\n})\n\nconst TopPage: React.FC = () => {\n  const [isBackdropOpen, setIsBackdropOpen] = Store.useGlobalState('isBackdropOpen')\n  const [, setIsError] = Store.useGlobalState('isError')\n  const classes = useStyles()\n\n  const onClick = async () => {\n    setIsBackdropOpen(true)\n    try {\n      const response = await getRequestToken()\n      window.location.href = response.data.authenticate_endpoint\n    } catch {\n      setIsError(true)\n    }\n    setIsBackdropOpen(false)\n  }\n\n  return (\n    <div>\n      <meta name='viewport' content='minimum-scale=1, initial-scale=1, width=device-width' />\n      <Grid container justify='center'>\n        <Grid item xs={12} md={8} lg={6}>\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item container justify='center'>\n                <Typography variant='subtitle1'>自分の生徒証を作成できるサイトです！</Typography>\n              </Grid>\n              <Grid container item justify='center' alignItems='center' className={classes.buttonContainer}>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  onClick={onClick}\n                  size='large'\n                  disabled={isBackdropOpen}\n                  className={classes.button}\n                  startIcon={<Twitter />}\n                >\n                  Twitter認証して生徒証を作る\n                </Button>\n              </Grid>\n              <Grid item container justify='center'>\n                <Typography variant='body2'>Twitter認証はアイコン取得と共有ツイートのためだけに使用します</Typography>\n              </Grid>\n              <Grid item container justify='center'>\n                <Typography variant='subtitle1'>↓ サンプル ↓</Typography>\n                <Grid item container justify='center' alignItems='center'>\n                  <img src={`${process.env.PUBLIC_URL}/sample.jpg`} width='70%' alt='sample' />\n                </Grid>\n              </Grid>\n              <Grid item container justify='flex-end'>\n                <Typography variant='caption'>\n                  Created by{' '}\n                  <Link href='https://twitter.com/ryochan_metal' target='_blank'>\n                    @ryochan_metal\n                  </Link>\n                </Typography>\n              </Grid>\n              <Grid item container justify='flex-end'>\n                <Typography variant='caption'>\n                  推奨ブラウザ：Chrome, Safari\n                </Typography>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default TopPage\n","import React from 'react'\nimport { InputAdornment, TextField } from '@material-ui/core'\n\nimport { Store } from 'Store'\n\ntype Props = {\n  item: keyof StudentInfo\n  rows: number\n  appendText?: string\n}\n\nconst MyTextField: React.FC<Props> = ({ item, rows, appendText }) => {\n  const [info, setInfo] = Store.useGlobalState(item)\n\n  return (\n    <TextField\n      variant='outlined'\n      size='small'\n      fullWidth\n      multiline={rows > 1}\n      rows={rows}\n      InputProps={{ endAdornment: <InputAdornment position='end'>{appendText || ''}</InputAdornment> }}\n      value={info}\n      onChange={(event) => setInfo(event.target.value as string)}\n    />\n  )\n}\n\nexport default MyTextField\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Grid, MenuItem, Select, Typography } from '@material-ui/core'\n\nimport { Store } from 'Store'\nimport MyTextField from 'components/MyTextField'\n\ntype ItemGridProps = {\n  title: string\n}\n\nconst ItemGrid: React.FC<ItemGridProps> = ({ children, title }) => {\n  return (\n    <Grid item xs={12}>\n      <Grid container direction='row' alignItems='center'>\n        <Grid item xs={12} sm={2}>\n          <Typography variant='subtitle2'>{title}</Typography>\n        </Grid>\n        {children}\n      </Grid>\n    </Grid>\n  )\n}\n\nconst useStyles = makeStyles({\n  root: {\n    padding: '8px',\n  },\n})\n\nconst Form: React.FC = () => {\n  const [grade, setGrade] = Store.useGlobalState('grade')\n  const classes = useStyles()\n\n  return (\n    <Grid container className={classes.root} spacing={2}>\n      <ItemGrid title='名前'>\n        <Grid item xs={12} sm={6}>\n          <MyTextField item='name' rows={1} />\n        </Grid>\n      </ItemGrid>\n      <ItemGrid title='生年月日'>\n        <Grid item xs={4} sm={3}>\n          <MyTextField item='year' rows={1} appendText='年' />\n        </Grid>\n        <Grid item xs={4} sm={2}>\n          <MyTextField item='month' rows={1} appendText='月' />\n        </Grid>\n        <Grid item xs={4} sm={2}>\n          <MyTextField item='date' rows={1} appendText='日' />\n        </Grid>\n      </ItemGrid>\n      <ItemGrid title='学年'>\n        <Select variant='outlined' margin='dense' value={grade} onChange={(event) => setGrade(event.target.value as '中等部' | '小等部')}>\n          <MenuItem value='中等部'>中等部</MenuItem>\n          <MenuItem value='小等部'>小等部</MenuItem>\n        </Select>\n        <Grid item xs={4} sm={2}>\n          <MyTextField item='gradeYear' rows={1} appendText='年' />\n        </Grid>\n      </ItemGrid>\n      <ItemGrid title='マイブーム'>\n        <Grid item xs={12} sm={10}>\n          <MyTextField item='myBoom' rows={2} />\n        </Grid>\n      </ItemGrid>\n      <ItemGrid title='今年の目標'>\n        <Grid item xs={12} sm={10}>\n          <MyTextField item='target' rows={2} />\n        </Grid>\n      </ItemGrid>\n    </Grid>\n  )\n}\n\nexport default Form\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, Dialog, DialogContent, DialogActions, Grid, Typography } from '@material-ui/core'\nimport { Twitter } from '@material-ui/icons'\n\nimport { Store } from 'Store'\nimport { tweet } from 'api/twitter'\n\ntype Props = {\n  src: string\n  open: boolean\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nconst useStyles = makeStyles({\n  button: {\n    textTransform: 'none',\n  },\n})\n\nconst TweetDialog: React.FC<Props> = ({ src, open, setOpen }) => {\n  const [complete, setComplete] = React.useState(false)\n  const [accessToken] = Store.useGlobalState('accessToken')\n  const [isBackdropOpen, setIsBackdropOpen] = Store.useGlobalState('isBackdropOpen')\n  const [, setIsError] = Store.useGlobalState('isError')\n  const classes = useStyles()\n\n  const onClickImg = () => {\n    const w = window.open('about:blank')\n    w && w.document.write(`<img style=\"object-fit: contain;width: 100%;height: 100%;\" src='${src}' />`)\n  }\n\n  const close = () => {\n    setOpen(false)\n    setComplete(false)\n  }\n\n  const onClickTweet = async () => {\n    setIsBackdropOpen(true)\n    try {\n      await tweet(accessToken, src)\n      setComplete(true)\n    } catch {\n      setIsError(true)\n    }\n    setIsBackdropOpen(false)\n  }\n  return (\n    <Dialog open={open} disableBackdropClick>\n      <DialogContent>\n        <Grid container justify='center' alignItems='center' spacing={2}>\n          <Grid item>\n            <img src={src} width='100%' alt='生徒証画像' onClick={onClickImg} />\n          </Grid>\n          <Grid item>\n            <Typography variant='subtitle1'>{complete ? 'ツイートしました！' : 'ツイートして共有しよう！'}</Typography>\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Grid container justify='center' alignItems='center'>\n          {complete ? (\n            <Button onClick={close} variant='contained' color='primary' size='large'>\n              OK\n            </Button>\n          ) : (\n            <Grid container justify='center' alignItems='center' spacing={2} direction='row-reverse'>\n              <Grid item>\n                <Button\n                  onClick={onClickTweet}\n                  variant='contained'\n                  color='primary'\n                  size='large'\n                  disabled={isBackdropOpen}\n                  className={classes.button}\n                  startIcon={<Twitter />}\n                >\n                  Twitterで共有\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button onClick={close}>キャンセル</Button>\n              </Grid>\n            </Grid>\n          )}\n        </Grid>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default TweetDialog\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst pink = '#E62588'\n\nconst useStyles = makeStyles({\n  header: {\n    width: '100%',\n    height: 160,\n    display: 'flex',\n  },\n  logo: {\n    marginLeft: 70,\n  },\n  logoJp: {\n    fontSize: 60,\n    paddingTop: 56,\n    letterSpacing: -2,\n  },\n  logoEn: {\n    fontSize: 32,\n    marginTop: 8,\n    marginLeft: 16,\n    letterSpacing: 4,\n  },\n  titleJp: {\n    fontSize: 72,\n    marginLeft: 'auto',\n    paddingTop: 64,\n    marginRight: 16,\n    letterSpacing: 110,\n  },\n  titleEn: {\n    width: '100%',\n    height: 44,\n    fontSize: 44,\n    lineHeight: 1,\n    paddingRight: 44,\n    letterSpacing: 40,\n    textAlign: 'end',\n    marginBottom: -8,\n  },\n  border: {\n    width: '100%',\n    height: 8,\n    color: pink,\n    backgroundColor: pink,\n    margin: 0,\n  },\n})\n\nconst CardHeader: React.FC = () => {\n  const classes = useStyles()\n  return (\n    <div>\n      <div className={classes.header}>\n        <div className={classes.logo}>\n          <div className={classes.logoJp}>さくら学院 父兄</div>\n          <div className={classes.logoEn}>Sakura Gakuin Fukei</div>\n        </div>\n        <div className={classes.titleJp}>生徒証</div>\n      </div>\n      <div className={classes.titleEn}>Student Card</div>\n      <hr className={classes.border} />\n    </div>\n  )\n}\n\nexport default CardHeader\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { Store } from 'Store'\n\nconst useStyles = makeStyles({\n  body: {\n    width: '100%',\n    height: 694,\n    display: 'flex',\n    backgroundImage: `url(${process.env.PUBLIC_URL}/background.png)`,\n    backgroundSize: 'cover',\n    marginTop: 2,\n  },\n  left: {\n    width: 470,\n    height: 590,\n    paddingLeft: 60,\n    paddingTop: 100,\n  },\n  right: {\n    width: 870,\n    height: 630,\n    paddingTop: 60,\n  },\n  icon: {\n    width: 380,\n    height: 380,\n    backgroundColor: 'white',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 40,\n    lineHeight: 2,\n  },\n  empire: {\n    marginTop: 64,\n    marginLeft: 16,\n    fontSize: 24,\n    lineHeight: 1.3,\n    letterSpacing: 2,\n  },\n  row: {\n    padding: '7px 0',\n    display: 'flex',\n    alignItems: 'center',\n    letterSpacing: 2,\n    lineHeight: 1.2,\n  },\n  key: {\n    width: 210,\n    fontSize: 32,\n  },\n  value: {\n    width: 600,\n    fontSize: 48,\n    color: '#333333',\n  },\n  ymd: {\n    fontSize: 40,\n    color: '#333333',\n  },\n  boomRow: {\n    width: '100%',\n    height: 120,\n    whiteSpace: 'pre-wrap',\n  },\n  targetKey: {\n    marginTop: 16,\n    fontSize: 32,\n    letterSpacing: 2,\n    lineHeight: 1.2,\n  },\n  targetValue: {\n    margin: '20px 0 0 60px',\n    width: 760,\n    height: 190,\n    fontSize: 56,\n    color: '#333333',\n    fontFamily: 'TanukiMagic !important',\n    letterSpacing: 2,\n    lineHeight: 1.2,\n    whiteSpace: 'pre-wrap',\n  },\n})\n\nconst Card: React.FC = () => {\n  const [name] = Store.useGlobalState('name')\n  const [year] = Store.useGlobalState('year')\n  const [month] = Store.useGlobalState('month')\n  const [date] = Store.useGlobalState('date')\n  const [grade] = Store.useGlobalState('grade')\n  const [gradeYear] = Store.useGlobalState('gradeYear')\n  const [myBoom] = Store.useGlobalState('myBoom')\n  const [target] = Store.useGlobalState('target')\n  const [iconUrl] = Store.useGlobalState('iconUrl')\n  const classes = useStyles()\n  return (\n    <div className={classes.body}>\n      <div className={classes.left}>\n        <div className={classes.icon}>\n          <img src={iconUrl} width='100%' height='auto' alt='アイコン' />\n        </div>\n        <div className={classes.empire}>\n          <div>有効期限</div>\n          <div>2021.8.31</div>\n        </div>\n      </div>\n      <div className={classes.right}>\n        <div className={classes.row}>\n          <div className={classes.key}>氏　　名</div>\n          <div className={classes.value}>{name}</div>\n        </div>\n        <div className={classes.row}>\n          <div className={classes.key}>生年月日</div>\n          <div className={classes.value}>\n            {year} <span className={classes.ymd}>年</span> {month} <span className={classes.ymd}>月</span> {date} <span className={classes.ymd}>日</span>\n          </div>\n        </div>\n        <div className={classes.row}>\n          <div className={classes.key}>学　　年</div>\n          <div className={classes.value}>\n            {grade} {gradeYear} 年\n          </div>\n        </div>\n        <div className={classes.boomRow}>\n          <div className={classes.row}>\n            <div className={classes.key}>マイブーム</div>\n            <div className={classes.value}>{myBoom}</div>\n          </div>\n        </div>\n        <div className={classes.targetKey}>今年の目標</div>\n        <div className={classes.targetValue}>{target}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport CardHeader from 'components/CardHeader'\nimport CardBody from 'components/CardBody'\n\nconst pink = '#E62588'\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#FEF3F8',\n    borderRadius: 8,\n    color: pink,\n  },\n})\n\nconst Card: React.FC = () => {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <CardHeader />\n      <CardBody />\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button,Dialog, DialogContent, DialogActions, Grid, Link, Paper, Typography } from '@material-ui/core'\nimport html2canvas from 'html2canvas'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport queryString from 'query-string'\n\nimport { Store } from 'Store'\nimport Form from 'components/Form'\nimport TweetDialog from 'components/TweetDialog'\nimport Card from 'components/Card'\nimport { getAccessToken, getIcon } from 'api/twitter'\n\ntype Query = {\n  oauth_token: string\n  oauth_verifier: string\n}\n\nconst useStyles = makeStyles({\n  paper: {\n    padding: '16px 8px',\n  },\n  buttonContainer: {\n    padding: 32,\n  },\n  card: {\n    position: 'absolute',\n    left: -3000,\n    width: 1342,\n    height: 900,\n  },\n  button: {\n    textTransform: 'none',\n  },\n})\n\nconst EditPage: React.FC = () => {\n  const [open, setOpen] = React.useState(false)\n  const [confirming, setConfirming] = React.useState(false)\n  const [src, setSrc] = React.useState('')\n  const [, setAccessToken] = Store.useGlobalState('accessToken')\n  const [, setIconUrl] = Store.useGlobalState('iconUrl')\n  const [isBackdropOpen, setIsBackdropOpen] = Store.useGlobalState('isBackdropOpen')\n  const [, setIsError] = Store.useGlobalState('isError')\n  const classes = useStyles()\n  const card = React.useRef<HTMLDivElement>(null)\n  const location = useLocation()\n  const history = useHistory()\n\n  React.useEffect(() => {\n    const init = async () => {\n      try {\n        const parsed = queryString.parse(location.search) as Query\n        const oauthToken = parsed.oauth_token\n        const oauthVerifier = parsed.oauth_verifier\n        const tokenResponse = await getAccessToken(oauthToken, oauthVerifier)\n        setAccessToken(tokenResponse.data.access_token)\n        const iconResponse = await getIcon(tokenResponse.data.access_token)\n        const url = iconResponse.data.icon\n        setIconUrl(url)\n      } catch {\n        setIsError(true)\n        history.push('/')\n      }\n    }\n    init()\n  }, [location, setAccessToken, setIconUrl, setIsError, history])\n\n  const onClick = () => {\n    setConfirming(false)\n    if (card.current) {\n      setIsBackdropOpen(true)\n      html2canvas(card.current, { scrollX: -window.scrollX, scrollY: -window.scrollY }).then((canvas) => {\n        setSrc(canvas.toDataURL())\n        setOpen(true)\n        setIsBackdropOpen(false)\n      })\n    } else {\n      setIsError(true)\n    }\n  }\n  return (\n    <div>\n      <meta name='viewport' content='minimum-scale=1, initial-scale=1, width=device-width' />\n      <div ref={card} className={classes.card}>\n        <Card />\n      </div>\n      <Grid container justify='center'>\n        <Grid item xs={12} md={8} lg={6}>\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item container>\n                <Typography variant='subtitle1'>以下を入力して、自分の生徒証を作ろう！</Typography>\n              </Grid>\n              <Grid item container>\n                <Form />\n              </Grid>\n              <Grid container item justify='center' alignItems='center' className={classes.buttonContainer}>\n                <Button variant='contained' color='primary' onClick={()=>setConfirming(true)} size='large' disabled={isBackdropOpen} className={classes.button}>\n                  生徒証を作成する\n                </Button>\n              </Grid>\n              <Grid item container justify='flex-end'>\n                <Typography variant='caption'>\n                  Created by{' '}\n                  <Link href='https://twitter.com/ryochan_metal' target='_blank'>\n                    @ryochan_metal\n                  </Link>\n                </Typography>\n              </Grid>\n            </Grid>\n            <TweetDialog src={src} open={open} setOpen={setOpen} />\n            <Dialog open={confirming}>\n              <DialogContent>\n                <Typography variant='subtitle1'>生徒証を作成しますか？</Typography>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={()=>setConfirming(false)}>キャンセル</Button>\n                <Button\n                  onClick={onClick}\n                  variant='contained'\n                  color='primary'\n                  size='large'\n                >\n                  作成する\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default EditPage\n","import React from 'react'\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\n\nimport TopPage from 'pages/TopPage'\nimport EditPage from 'pages/EditPage'\n\nconst Router = () => {\n  return (\n    <BrowserRouter basename='/sakura-card-maker'>\n      <Switch>\n        <Route path='/' exact component={TopPage} />\n        <Route path='/edit' component={EditPage} />\n        {/* Not Found */}\n        <Route component={() => <Redirect to='/' />} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default Router\n","import React from 'react'\nimport { AppBar, Toolbar, Typography } from '@material-ui/core'\n\nconst Header: React.FC = () => {\n  return (\n    <AppBar position='static'>\n      <Toolbar>\n        <Typography variant='h6'>さくら学院 生徒証メーカー（開発中）</Typography>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Backdrop, CircularProgress, Snackbar } from '@material-ui/core'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport { Store } from 'Store'\nimport Router from 'Router'\nimport Header from 'components/Header'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    backdrop: {\n      zIndex: 9999,\n    },\n  })\n)\n\nconst App: React.FC = () => {\n  const [isBackdropOpen] = Store.useGlobalState('isBackdropOpen')\n  const [isError, setIsError] = Store.useGlobalState('isError')\n  const classes = useStyles()\n  return (\n    <div>\n      <Header />\n      <Router />\n      <Backdrop className={classes.backdrop} open={isBackdropOpen}>\n        <CircularProgress />\n      </Backdrop>\n      <Snackbar\n        open={isError}\n        onClose={() => setIsError(false)}\n        message='エラーが発生しました。しばらく時間をおいて再度アクセスして下さい'\n        autoHideDuration={5000}\n      />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}